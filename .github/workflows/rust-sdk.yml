# Based on https://github.com/actions-rs/meta/blob/master/recipes/quickstart.md
on: [push, pull_request]
name: Rust SDK - Examples

jobs:
  testground:
    strategy:
      fail-fast: false
      matrix:
        test: [example, publish-subscribe, crash-on-purpose]
        run: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]

    name: Testground runs
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          path: testground-stability

      - name: Checkout testground
        uses: actions/checkout@v2
        with:
          path: testground
          repository: testground/testground

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.16.x"

      - name: Install testground
        run: make install
        working-directory: testground

      - name: Run testground daemon
        run: testground daemon > daemon.out 2> daemon.err &
        working-directory: testground

      - name: Import testground plans
        run: testground plan import --from ./testground-stability/sdk-rust/

      - name: Check testground daemon health
        run:
          echo "Waiting for Testground to launch on 8042...";
          while ! nc -z localhost 8042; do
            sleep 1;
          done;
          echo "Testground launched";
          testground healthcheck --runner local:docker --fix;
        shell: bash

      # TODO: merge this into one when the instances issue is fixed
      - name: Run testground plan (case=${{ matrix.test }})
        if: ${{ matrix.test == 'example' || matrix.test == 'crash-on-purpose' }}
        run: |
          testground run single                  \
            --plan=sdk-rust                      \
            --testcase=${{ matrix.test }}        \
            --builder=docker:generic             \
            --runner=local:docker                \
            --instances=1                        \
            --wait                               \
            --collect                            \
            --collect-file ./result.tgz

      # TODO: merge this into one when the instances issue is fixed
      - name: Run testground plan (case=${{ matrix.test }})
        if: ${{ matrix.test == 'publish-subscribe' }}
        run: |
          testground run single                  \
            --plan=sdk-rust                      \
            --testcase=${{ matrix.test }}        \
            --builder=docker:generic             \
            --runner=local:docker                \
            --instances=2                        \
            --wait                               \
            --collect                            \
            --collect-file ./result.tgz

      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: testground-output
          path: |
            testground/daemon.*
            result*.tgz
