name: Setup Testground
description: Setup the testground binary
inputs:
  testground_endpoint:
    required: false
    description: 'testground endpoint'
runs:
  using: composite
  steps:
    # - name: Inject testground into PATH
    #   shell: bash
    #   run: mkdir ${PWD}/binaries && echo ${PWD}/binaries >> $GITHUB_PATH
    # - name: extract binary (until we have binary distribution)
    #   shell: bash
    #   run: docker cp `docker create iptestground/testground:edge`:/testground "${PWD}/binaries/testground"
    # - name: Pull containers
    #   shell: bash
    #   run: docker pull iptestground/sidecar:edge && docker pull iptestground/sync-service:latest
    - name: Checkout testground
      uses: actions/checkout@v2
      with:
        path: testground
        repository: testground/testground

    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: "1.16.x"

    - name: Install testground
      run: make install
      working-directory: testground
      shell: bash

    - name: Run testground daemon
      if: ${{ inputs.testground_endpoint == '' }}
      run: testground daemon | tee ~/daemon.out &
      shell: bash

    - name: Check testground daemon health
      if: ${{ inputs.testground_endpoint == '' }}
      run: testground healthcheck --runner local:docker --fix
      shell: bash

    - name: Configure testground CLI
      if: ${{ inputs.testground_endpoint != '' }}
      run: |
        mkdir -p ~/testground/;
        cat <<EOF >> ~/testground/.env.toml

        [client]
        endpoint = "${{ inputs.testground_endpoint }}"
        EOF
      shell: bash
