[metadata]
name = "basic"

[global]
plan = "libp2p/ping-legacy"
case = "ping"
total_instances = 2
builder = "docker:go"
runner = "cluster:k8s"

[global.build_config]
push_registry = true
go_proxy_mode = "remote"
go_proxy_url = "http://localhost:8081"
registry_type = "aws"

[[groups]]
id = "regular"
instances = { count = 2 }

# [groups.build]
# dependencies = [
#   { module = "github.com/testground/sdk-go", version = "v0.2.7" },
# ]
# This doesn't work with the regular ping, we get:
# Step 15/22 : RUN cd ${PLAN_DIR}     && go env -w GOPROXY="${GO_PROXY}"     && CGO_ENABLED=${CgoEnabled} GOOS=linux GOARCH=amd64 go build -o ${PLAN_DIR}/testplan.bin ${BUILD_TAGS} ${TESTPLAN_EXEC_PKG}
#  ---> Running in 67a8778099f4
# [91mmain.go:19:2: missing go.sum entry for module providing package github.com/testground/sdk-go/network (imported by github.com/libp2p/test-plans/ping); to add:
# 	go get github.com/libp2p/test-plans/ping
# main.go:20:2: missing go.sum entry for module providing package github.com/testground/sdk-go/run (imported by github.com/libp2p/test-plans/ping); to add:
# 	go get github.com/libp2p/test-plans/ping
# main.go:21:2: missing go.sum entry for module providing package github.com/testground/sdk-go/runtime (imported by github.com/libp2p/test-plans/ping); to add:
# 	go get github.com/libp2p/test-plans/ping
# main.go:22:2: missing go.sum entry for module providing package github.com/testground/sdk-go/sync (imported by github.com/libp2p/test-plans/ping); to add:
# 	go get github.com/libp2p/test-plans/ping
# 0mMay 11 11:32:20.636230	build failed	{"plan": "ping", "groups": ["regular"], "builder": "docker:go", "error": "docker build failed: The command '/bin/sh -c cd ${PLAN_DIR}     && go env -w GOPROXY=\"${GO_PROXY}\"     && CGO_ENABLED=${CgoEnabled} GOOS=linux GOARCH=amd64 go build -o ${PLAN_DIR}/testplan.bin ${BUILD_TAGS} ${TESTPLAN_EXEC_PKG}' returned a non-zero code: 1"}